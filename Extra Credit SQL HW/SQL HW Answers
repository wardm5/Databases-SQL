// SQL HW - Misha Ward

LECTURE 5 PART 1:
CREATE TABLE Hotel (
	 hotelNo      INT               NOT NULL      UNIQUE,
	 hotelName	  VARCHAR(15)				NOT NULL,
	 city				  VARCHAR(15)				NOT NULL,
	PRIMARY KEY   (hotelNo)
);

CREATE TABLE Room (
     roomNo       INT     NOT NULL UNIQUE,
     hotelNo      INT     NOT NULL,
     type         VARCHAR(15),
    price         DECIMAL(5,2)         NOT NULL,
    CHECK (price >= 50.00 AND price <= 500.00),
    CHECK (type == 'Standard' OR type == 'Deluxe' OR type == 'Suite'),
    CHECK (roomNo >= 1 AND roomNo <= 9999),
    PRIMARY KEY(roomNo, hotelNo),
    FOREIGN KEY (hotelNo) REFERENCES Hotel(hotelNo)
);

CREATE TABLE Booking (
     hotelNo            INT            NOT NULL,
     guestNo            INT           NOT NULL,
     dateFrom           DATE                            NOT NULL,
     dateTo             DATE                              NOT NULL,
     roomNo             INT             NOT NULL,
    CHECK (dateFrom < dateTo),
    PRIMARY KEY(hotelNo, dateFrom, roomNo),
    FOREIGN KEY (hotelNo) REFERENCES Hotel(hotelNo),
    FOREIGN KEY (roomNo)  REFERENCES Room(roomNo)
);

CREATE TABLE Guest (
     guestNo            INT            NOT NULL  UNIQUE,
     guestName          VARCHAR(15)              NOT NULL,
     guestAddress       VARCHAR(30)              NOT NULL,
    PRIMARY KEY(guestNo)
);

LECTURE 5 PART 2:
Q1.
SELECT p.Pnumber, p.Dnum, e.Lname, e.Address, e.Bdate
FROM PROJECT p
JOIN DEPARTMENT d ON p.dnum = d.dNumber
JOIN EMPLOYEE e ON e.Ssn = d.Mgr_ssn
WHERE  p.plocation = ‘Stafford’;

RESULTS:
10|4|Wallace|291 Berry, Bellaire, TX|1941-06-20
30|4|Wallace|291 Berry, Bellaire, TX|1941-06-20

Q2.
SELECT e.Fname, E.Lname,  e.Address
FROM EMPLOYEE e
JOIN DEPARTMENT d ON Dnumber = e.Dno
WHERE d.Dname = “Research”

RESULTS:
John|Smith|731 Fondren, Houston, TX
Franklin|Wong|638 Voss, Houston, TX
Ramesh|Narayan|975 Fire Oak, Humble, TX
Joyce|English|5631 Rice, Houston, TX

Q3.
SELECT Dlocation
FROM DEPT_LOCATIONS dl
JOIN DEPARTMENT d ON dl.Dnumber = d.dNumber
WHERE d.Dname = 'Research'  ;

RESULTS:
Bellaire
Houston
Sugarland

Q4.
SELECT e1.Fname, e1.Lname, e2.Fname, e2.Lname
FROM EMPLOYEE e1
JOIN DEPARTMENT d ON E1.dNo = d.Dnumber
JOIN EMPLOYEE as e2 ON d.Mgr_ssn = e2.Ssn ;

RESULTS:
John|Smith|Franklin|Wong
Franklin|Wong|Franklin|Wong
Alicia|Zelaya|Jennifer|Wallace
Jennifer|Wallace|Jennifer|Wallace
Ramesh|Narayan|Franklin|Wong
Joyce|English|Franklin|Wong
Ahmad|Jabbar|Jennifer|Wallace
James|Borg|James|Borg

Q5.
SELECT DISTINCT e.Salary
FROM EMPLOYEE e ;

RESULTS:
30000
40000
25000
43000
38000
55000

Q6.
SELECT e.Fname, e.Lname
FROM EMPLOYEE e
WHERE e.Address LIKE '%Houston%'  ;

RESULTS:
John|Smith
Franklin|Wong
Joyce|English
Ahmad|Jabbar
James|Borg

Q7.
SELECT e.Fname, e.Lname
FROM EMPLOYEE e
WHERE e.Bdate LIKE '197%'  ;

RESULTS:
Joyce|English

LECTURE 6 PART 1:
Q1.
// Relation in terms of the Table Hotel...
SELECT *
FROM Hotel ;

Q2.
SELECT g.guestName, guestAddress
FROM Guest g
JOIN Hotel h ON g.hotelNo = h.hotelNo
WHERE h.city LIKE '%Seattle%'
ORDER BY guestName ASC ;

Q3.
SELECT count(hotelNo)
FROM Hotel;

Q4.
SELECT COUNT(guestNo)
FROM Booking
WHERE (dateFrom > 3/01/%%%% AND dateFrom < 3/31/%%%%)
    OR (dateTo > 3/01/%%%% AND dateTo < 3/31/%%%%) ;

Q5.
SELECT COUNT(hotelNo)
FROM Hotel
GROUP BY city ;

Q6.
SELECT AVG(price), hotelNo
FROM Room
WHERE type = 'Standard'
GROUP BY hotelNo ;

Q7.


Q8.
SELECT COUNT(r.roomNo), h.hotelName
FROM Hotel h
JOIN Room r ON h.hotelNo = r.hotelNo
WHERE city LIKE '%Las Vegas%'
GROUP BY h.hotelName ;

Q9.
SELECT hotelNo
FROM Room
GROUP BY hotelNo
HAVING COUNT(type) > 2

Q10.
SELECT b.roomNo
FROM Booking b
JOIN Hotel h ON b.hotelNo = b.hotelNo
WHERE NOT b.dateFrom <= CURRENT_DATE AND
		NOT CURRENT_DATE <= b.dateTo AND hotelName LIKE '%Hilton'  ;

PART 2:
// Returns Correct Answer
SELECT d.Dname, COUNT(*)
FROM DEPARTMENT d, EMPLOYEE e
WHERE d.dnumber = e.dNo AND e.salary >30000 AND e.dno IN (
    SELECT e.dno
    FROM EMPLOYEE e
    GROUP BY e.dNo
    HAVING COUNT(*) >2
)
GROUP BY d.Dname ;

//RETURNS TOTAL NUMBER OF EMPLOYEES
SELECT COUNT(e.SSN), e.dno
FROM EMPLOYEE e
LEFT JOIN (
   SELECT Count(Ssn) as Ssn_Count, Dno
   FROM EMPLOYEE
   GROUP BY Dno
   HAVING COUNT(Dno) > 2
) as Sub ON Sub.Dno = e.Dno
WHERE Sub.Ssn_Count > 2 AND e.Salary > 30000;

Part 3:
// CREATE TABLES FOR TESTING
CREATE TABLE test (
    id      INT               NOT NULL      UNIQUE,
    name	  VARCHAR(15)	                          ,
    salary				  DECIMAL(10,2)                 ,
    PRIMARY KEY   (id)
) ;

CREATE TABLE test2 (
    id      INT               NOT NULL      UNIQUE,
    name	  VARCHAR(15)	                          ,
    salary				  DECIMAL(10,2)                 ,
    PRIMARY KEY   (id)
) ;

Q1.
    a) Correct Syntax below:
    Insert into test
    VALUES(1, 'John', 30);

    b) Correct Syntax below:
    Insert into test(id, name)
    VALUES(2, 'John');

    c) Correct Syntax below (remove 'values' and 'as'):
    Insert into test
    SELECT *
    FROM test2;

    d) Correct Syntax below:
    DELETE FROM test1
    WHERE id = 1;
    DELETE FROM test2
    WHERE id = 1;

    e) Correct Syntax below:
    UPDATE test3
    SET id = 3
    WHERE name = 'John' ;

Q2.
  	UPDATE EMPLOYEE
		SET Salary = Salary * 1.25
		WHERE Fname = 'John' AND Lname = 'Smith' ;
